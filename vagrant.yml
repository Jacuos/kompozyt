- hosts: default

  vars:
   - db_name: kompozyt
   - db_user: admin
   - db_password: admin
   - celery_user: celery
   - celery_password: celery
   - celery_vhost: kompozyt

  tasks:
   # - name: update apt cache
   #   sudo: True
   #   apt: update_cache=yes

   - name: add postgres apt repository key
     sudo: True
     apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc validate_certs=no

   - name: add postgres apt repository
     sudo: True
     apt_repository: >
      repo='deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main'
      state=present

   - name: install packages
     sudo: True
     apt: pkg={{ item }} state=latest
     with_items:
      - postgresql-9.4
      - postgresql-contrib-9.4
      - python-virtualenv
      - postgis
      - python-psycopg2

   - name: overwrite postgresql configuration
     sudo: True
     sudo_user: postgres
     copy: src=ansible/{{ item }} dest=/etc/postgresql/9.4/main/{{ item }}
     with_items:
      - postgresql.conf

   - name: overwrite pg_hba.conf
     sudo: True
     sudo_user: postgres
     template: src=ansible/pg_hba.conf dest=/etc/postgresql/9.4/main/pg_hba.conf

#   - name: ensure postgresql hstore extension is created
#     sudo: True
#     sudo_user: postgres
#     shell: "psql template1 -c 'CREATE EXTENSION hstore;'"
#     register: psql_result
#     failed_when: >
#       psql_result.rc != 0 and ("already exists" not in psql_result.stderr)
#     changed_when: "psql_result.rc == 0"

   - name: start postgresql
     sudo: True
     service: name=postgresql state=restarted

   - name: create database user
     postgresql_user: name={{ db_user }} password={{ db_password }}
      role_attr_flags=CREATEDB,SUPERUSER
     sudo: True
     sudo_user: postgres

   - name: create database
     postgresql_db: name={{ db_name }} owner={{ db_user }} template=template1
     sudo: True
     sudo_user: postgres

     # CELERY
   - name: add rabbitmq repository key
     sudo: True
     apt_key: url=https://www.rabbitmq.com/rabbitmq-signing-key-public.asc

   - name: add rabbitmq apt repository
     sudo: True
     apt_repository: repo='deb http://www.rabbitmq.com/debian/ testing main' state=present

   - name: install rabbitmq
     sudo: True
     apt: pkg=rabbitmq-server state=latest update_cache=yes

   - name: create rabbitmq celery user and vhost
     sudo: True
     command: rabbitmqctl {{ item }}
     register: result
     with_items:
      - add_user {{ celery_user }} {{ celery_password }}
      - add_vhost {{ celery_vhost }}
     failed_when: >
       result.rc != 0 and ("already_exists" not in result.stderr)
     changed_when: "result.rc == 0"

   - name: set rabbitmq permissions
     sudo: True
     command: rabbitmqctl set_permissions -p {{ celery_vhost }} {{ celery_user }} ".*" ".*" ".*"
